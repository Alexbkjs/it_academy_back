services:
  db:
    image: postgres:15
    container_name: fastapi_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data 
      
    # In development, it's best to avoid persistent volumes to ensure a fresh database state for every developer, using migrations and seed data to maintain consistency.
    # In production, you should use persistent volumes for database data, automate migrations, and implement proper backup and rollback mechanisms.
    
  app:
    build: .
    command: bash -c "python wait_for_db.py && alembic upgrade head && python seed_db.py && uvicorn main:app --host 0.0.0.0 --port 9000 --reload"
    depends_on:
      - db
    volumes:
      - .:/app
    ports:
      - "9000:9000"
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

