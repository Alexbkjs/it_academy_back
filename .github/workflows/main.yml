name: Build and Deploy Containers to ACR
on: [push]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build FastAPI Docker image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/fastapi:${{ github.sha }} .
          docker tag ${{ secrets.ACR_LOGIN_SERVER }}/fastapi:${{ github.sha }} ${{ secrets.ACR_LOGIN_SERVER }}/fastapi:latest

      - name: Log in to ACR
        run: |
          az acr login --name ${{ secrets.ACR_LOGIN_SERVER }}

      - name: Push FastAPI Docker image to ACR
        run: |
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/fastapi:${{ github.sha }}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/fastapi:latest

      - name: Run Alembic Migrations
        run: |
          docker run --rm \
            -e DATABASE_URL=postgresql+asyncpg://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }} \
            ${{ secrets.ACR_LOGIN_SERVER }}/fastapi:latest alembic upgrade head

      - name: "Deploy to Azure Container Instances"
        uses: "azure/aci-deploy@v1"
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: fastapi-${{ github.run_id }}
          image: ${{ secrets.ACR_LOGIN_SERVER }}/fastapi:latest
          registry-login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          name: fastapi-app-via-github-actions_v2
          location: "North Europe"
          environment-variables: |
            DATABASE_URL=postgresql+asyncpg://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}
            BOT_TOKEN=${{ secrets.BOT_TOKEN }}
          ports: |
            9000
    env:
      ACTIONS_STEP_DEBUG: true
